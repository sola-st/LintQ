| concept_complex_bit_use.py:6:5:6:22 | ControlFlowNode for QuantumRegister() | but use : circuit: qc - reg: q - index: 0 - gate: h |
| concept_complex_bit_use.py:6:5:6:22 | ControlFlowNode for QuantumRegister() | but use : circuit: qc - reg: q - index: 1 - gate: h |
| concept_complex_bit_use.py:6:5:6:22 | ControlFlowNode for QuantumRegister() | but use : circuit: qc - reg: q - index: 2 - gate: h |
| concept_complex_bit_use.py:6:5:6:22 | ControlFlowNode for QuantumRegister() | but use : circuit: qc - reg: q - index: 3 - gate: h |
| concept_complex_bit_use.py:9:6:9:9 | ControlFlowNode for Subscript | but use : circuit: qc - reg: q - index: 0 - gate: h |
| concept_complex_bit_use.py:10:7:10:10 | ControlFlowNode for Subscript | but use : circuit: qc - reg: q - index: 0 - gate: cx |
| concept_complex_bit_use.py:10:13:10:16 | ControlFlowNode for Subscript | but use : circuit: qc - reg: q - index: 1 - gate: cx |
| concept_complex_bit_use.py:11:12:11:15 | ControlFlowNode for Subscript | but use : circuit: qc - reg: q - index: 3 - gate: rx |
| concept_complex_bit_use.py:16:12:16:12 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 0 - gate: s |
| concept_complex_bit_use.py:17:13:17:13 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 0 - gate: cx |
| concept_complex_bit_use.py:17:16:17:16 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 1 - gate: cx |
| concept_complex_bit_use.py:18:13:18:13 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 1 - gate: cx |
| concept_complex_bit_use.py:18:16:18:16 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 2 - gate: cx |
| concept_complex_bit_use.py:19:13:19:13 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 2 - gate: cx |
| concept_complex_bit_use.py:19:16:19:16 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 3 - gate: cx |
| concept_complex_bit_use.py:20:12:20:12 | ControlFlowNode for IntegerLiteral | but use : circuit: qc_front - reg: anonymous register - index: 3 - gate: t |
| concept_complex_bit_use.py:38:6:38:13 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qregA - index: 1 - gate: y |
| concept_gate_specification.py:9:6:9:6 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 0 - gate: x |
| concept_gate_specification.py:10:6:10:6 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 1 - gate: y |
| concept_gate_specification.py:11:6:11:6 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 2 - gate: z |
| concept_gate_specification.py:12:6:12:6 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 3 - gate: h |
| concept_gate_specification.py:13:6:13:6 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 4 - gate: s |
| concept_gate_specification.py:14:8:14:8 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 5 - gate: sdg |
| concept_gate_specification.py:15:6:15:6 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 6 - gate: t |
| concept_gate_specification.py:16:8:16:8 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 7 - gate: tdg |
| concept_gate_specification.py:17:24:17:24 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 0 - gate: rx |
| concept_gate_specification.py:18:24:18:24 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 1 - gate: ry |
| concept_gate_specification.py:19:22:19:22 | ControlFlowNode for IntegerLiteral | but use : circuit: qc - reg: anonymous register - index: 2 - gate: rz |
| concept_gate_specification.py:25:7:25:13 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 0 - gate: cx |
| concept_gate_specification.py:25:16:25:22 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 1 - gate: cx |
| concept_gate_specification.py:26:7:26:13 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 1 - gate: cy |
| concept_gate_specification.py:26:16:26:22 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 2 - gate: cy |
| concept_gate_specification.py:27:7:27:13 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 2 - gate: cz |
| concept_gate_specification.py:27:16:27:22 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 3 - gate: cz |
| concept_gate_specification.py:28:21:28:27 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 3 - gate: ch |
| concept_gate_specification.py:28:43:28:49 | ControlFlowNode for Subscript | but use : circuit: qc - reg: qreg - index: 4 - gate: ch |
