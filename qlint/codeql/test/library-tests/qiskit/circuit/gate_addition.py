from qiskit import QuantumCircuit, QuantumRegister, ClassicalRegister
from qiskit.circuit.library import XGate, YGate, ZGate, HGate, SGate, SdgGate, TGate, TdgGate, RXGate, RYGate, RZGate, U1Gate, U2Gate, U3Gate, CXGate, CYGate, CZGate, CHGate, CRZGate, CU1Gate, CU3Gate, SwapGate, CCXGate, CSwapGate, RXXGate, RYYGate, RZZGate, RZXGate, RZZGate, Measure

qreg = QuantumRegister(8)
creg = ClassicalRegister(8)
qc = QuantumCircuit(qreg, creg)

# add as attribute of the circuit
qc.x(0)
qc.y(1)
qc.z(2)
qc.h(3)
qc.s(4)
qc.sdg(5)
qc.t(6)
qc.tdg(7)
qc.rx(theta=0.1, qubit=0)
qc.ry(theta=0.1, qubit=1)
qc.rz(phi=0.1, qubit=2)
qc.u1(theta=0.1, qubit=3)
qc.p(theta=0.1, qubit=4)
qc.u2(phi=0.1, lam=0.2, qubit=4)
qc.u(theta=0.1, phi=0.1, lam=0.2, qubit=5)
qc.u3(theta=0.1, phi=0.1, lam=0.2, qubit=5)
qc.cx(qreg[0], qreg[1])
qc.cy(qreg[1], qreg[2])
qc.cz(qreg[2], qreg[3])
qc.ch(control_qubit=qreg[3], target_qubit=qreg[4])
qc.crz(theta=0.1, control_qubit=qreg[4], target_qubit=qreg[5])
qc.cu1(theta=0.1, control_qubit=qreg[5], target_qubit=qreg[6])
qc.cp(theta=0.1, control_qubit=qreg[6], target_qubit=qreg[7])
qc.cu3(theta=0.1, phi=0.1, lam=0.2, control_qubit=qreg[6], target_qubit=qreg[7])
qc.cu(theta=0.1, phi=0.1, lam=0.2, gamma=0.4, control_qubit=qreg[6], target_qubit=qreg[7])
qc.swap(0, 1)
qc.ccx(0, 1, 2)
qc.cswap(0, 1, 2)
qc.rxx(theta=0.1, qubit1=0, qubit2=1)
qc.ryy(theta=0.1, qubit1=1, qubit2=2)
qc.rzz(theta=0.1, qubit1=2, qubit2=3)
qc.rzx(theta=0.1, qubit1=3, qubit2=4)
qc.rzz(0.1, 4, 5)
qc.measure(qreg[0], creg[0])
qc.measure_all()

# add with append
qc.append(XGate(), qargs=[0])
qc.append(YGate(), qargs=[1])
qc.append(ZGate(), qargs=[2])
qc.append(HGate(), qargs=[3])
qc.append(SGate(), qargs=[4])
qc.append(SdgGate(), qargs=[5])
qc.append(TGate(), qargs=[6])
qc.append(TdgGate(), qargs=[7])
qc.append(RXGate(theta=0.1), qargs=[0])
qc.append(RYGate(theta=0.1), [1])
qc.append(RZGate(phi=0.1), [2])
qc.append(U1Gate(theta=0.1), [3])
qc.append(U2Gate(phi=0.1, lam=0.2), [4])
qc.append(U3Gate(theta=0.1, phi=0.1, lam=0.2), [5])
qc.append(CXGate(), qargs=[qreg[0], qreg[1]])
qc.append(CYGate(), qargs=[qreg[1], qreg[2]])
qc.append(CZGate(), qargs=[qreg[2], qreg[3]])
qc.append(CHGate(), qargs=[3, 4])
qc.append(instruction=CRZGate(theta=0.1), qargs=[qreg[4], qreg[5]])
qc.append(instruction=CU1Gate(theta=0.1), qargs=[qreg[5], qreg[6]])
qc.append(CU3Gate(0.1, 0.1, 0.2), qargs=[6, 7])
qc.append(SwapGate(), qargs=[0, 1])
qc.append(CCXGate(), qargs=[0, 1, 2])
qc.append(CSwapGate(), qargs=[0, 1, 2])
qc.append(RXXGate(theta=0.1), qargs=[0, 1])
qc.append(RYYGate(theta=0.1), qargs=[1, 2])
qc.append(RZZGate(theta=0.1), qargs=[2, 3])
qc.append(RZXGate(theta=0.1), qargs=[3, 4])
qc.append(RZZGate(theta=0.1), qargs=[4, 5])
qc.append(Measure(), qargs=[0], cargs=[creg[0]])
